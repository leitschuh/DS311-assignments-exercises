geom_line(color="turquoise4") +
theme_minimal() +
theme(axis.text.x=element_text(angle=50, hjust=1), plot.title = element_text(hjust=0.5, face="bold"))+
labs(x="Datum", y="Flüge", title="Anzahl der Flüge (01.01.2020 bis 30.06.2020)")
housing_years
ggplot(data=housing_years,aes(x = var1, y=Freq, group=1))+
geom_line(color="turquoise4") +
theme_minimal() +
theme(axis.text.x=element_text(angle=50, hjust=1), plot.title = element_text(hjust=0.5, face="bold"))+
labs(x="Datum", y="Flüge", title="Anzahl der Flüge (01.01.2020 bis 30.06.2020)")
ggplot(data=housing_years,aes(x = Var1, y=Freq, group=1))+
geom_line(color="turquoise4") +
theme_minimal() +
theme(axis.text.x=element_text(angle=50, hjust=1), plot.title = element_text(hjust=0.5, face="bold"))+
labs(x="Datum", y="Flüge", title="Anzahl der Flüge (01.01.2020 bis 30.06.2020)")
# Enter your code here!
ggplot(data=housingData, aes(x=Market.Value.per.SqFt))+
geom_histogram(fill="steelblue")+
labs(y="Anzahl der Flüge", x="Distanz in Meilen")
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt), fun.y = "mean") +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean market value per sqft", x="district")+
ggtitle("Mean market value per sqft in the different districts of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
ggplot(data=housingData,aes(x = Year.Built, y=Market.Value.per.SqFt), fun.y="mean")+
geom_line(color="turquoise4") +
theme_minimal() +
scale_x_date(date_labels = "%Y", date_breaks = "10 years")+
theme(axis.text.x=element_text(angle=50, hjust=1), plot.title = element_text(hjust=0.5, face="bold"))+
labs(x="Datum", y="Flüge", title="Anzahl der Flüge (01.01.2020 bis 30.06.2020)")
housingData$Year.Built <- as.Date(housingData$Year.Built, "%Y")
housingData$Year.Built <- as.Date(housingData$Year.Built)
housingData$Year.Built <- as.Date(housingData$Year.Built)
ggplot(data=housingData,aes(x = Year.Built, y=Market.Value.per.SqFt), fun.y="mean")+
geom_line(color="turquoise4") +
theme_minimal() +
theme(axis.text.x=element_text(angle=50, hjust=1), plot.title = element_text(hjust=0.5, face="bold"))+
labs(x="Datum", y="Flüge", title="Anzahl der Flüge (01.01.2020 bis 30.06.2020)")
ggplot(data=housingData,aes(x = Year.Built, y=Market.Value.per.SqFt, group=1), fun.y="mean")+
geom_line(color="turquoise4") +
theme_minimal() +
theme(axis.text.x=element_text(angle=50, hjust=1), plot.title = element_text(hjust=0.5, face="bold"))+
labs(x="Datum", y="Flüge", title="Anzahl der Flüge (01.01.2020 bis 30.06.2020)")
#plot 1 - Mean market value per sqft in the different districts of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt), fun.y = "mean") +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean market value per sqft", x="district")+
ggtitle("Mean market value per sqft in the different districts of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Enter your code here!
pairs(~ Market.Value.per.SqFt + Year.Built, data = housingData, main = "Correlation between Murder and Assault")
# Head of the cleaned data set
head(housingData)
# Enter your code here!
pairs(~ Market.Value.per.SqFt + Boro, data = housingData, main = "Correlation between Murder and Assault")
# Head of the cleaned data set
head(housingData)
# Enter your code here!
mean(housingData[housingData$Boro == 'Manhattan', 'Market.Value.per.SqFt'])
#plot 1 - Mean market value per sqft in the different districts of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt), fun.y = "mean") +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Enter your code here!
mean(housingData[housingData$Boro == 'Brooklyn', 'Market.Value.per.SqFt'])
# Enter your code here!
mean(housingData[housingData$Boro == 'Queens', 'Market.Value.per.SqFt'])
mean(PlantGrowth[PlantGrowth$group == 'trt2', 'weigth'])
mean(PlantGrowth[PlantGrowth$group == 'trt2', 'weight'])
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight), fun.y = "mean") +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,50,10))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
mean(PlantGrowth[PlantGrowth$group == 'ctrl', 'weight'])
# Head of the data set
head(PlantGrowth)
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight), fun.y = "mean") +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,5,1))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight)) +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,5,1))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Head of the data set
head(PlantGrowth)
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight)) +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,50,10))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Head of the cleaned data set
head(housingData)
# Enter your code here!
mean(housingData[housingData$Boro == 'Queens', 'Market.Value.per.SqFt'])
# Enter your code here!
mean(housingData[housingData$Boro == 'Manhattan', 'Market.Value.per.SqFt'])
# Enter your code here!
ggplot(PlantGrowth, aes(x=group, y=weight)) +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,50,10))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Enter your code here!
ggplot(PlantGrowth, aes(x=group, y=weight)) +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
PlantGrowth
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight),stat = "summary", fun.y = "mean") +
geom_bar(stat="identity", fill="steelblue")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,50,10))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Head of the cleaned data set
head(housingData)
#plot 1 - Mean market value per sqft in the different districts of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt), fun.y = "mean") +
geom_bar(fill="steelblue")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 1 - Mean market value per sqft in the different districts of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt), fun.y = "mean") +
geom_bar(stat = "summary", fill="steelblue")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 1 - Mean market value per sqft in the different districts of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt)) +
geom_bar(stat = "summary", fill="steelblue", fun = "mean")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight),stat = "summary") +
geom_bar(stat="summary", fill="steelblue", fun="mean")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,50,10))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight),stat = "summary") +
geom_bar(stat="summary", fill="steelblue", fun="mean")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,6,1))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 1 - Mean market value per sqft in the different districts of new york
manhattan<- mean(housingData[housingData$Boro == 'Manhattan', 'Market.Value.per.SqFt'])
manhattan<- mean(housingData[housingData$Boro == 'Manhattan', 'Market.Value.per.SqFt'])
brooklyn<- mean(housingData[housingData$Boro == 'Brooklyn', 'Market.Value.per.SqFt'])
queens<- mean(housingData[housingData$Boro == 'Queens', 'Market.Value.per.SqFt'])
bronx<- mean(housingData[housingData$Boro == 'Bronx', 'Market.Value.per.SqFt'])
staten_island<- mean(housingData[housingData$Boro == 'Staten Island', 'Market.Value.per.SqFt'])
#plot 1 - Mean market value per sqft in the different districts of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt)) +
geom_bar(stat = "summary", fill="steelblue", fun = "mean")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
manhattan
brooklyn
queens
#plot 2 - Mean market value per sqft in the different neighborhoods of new york
ggplot(housingData, aes(x=reorder(Neighborhood,-Market.Value.per.SqFt), y=Market.Value.per.SqFt)) +
geom_bar(stat = "summary", fill="steelblue", fun = "mean")+
labs(y="mean market value per sqft", x="neighborhoods")+
ggtitle("Mean market value per sqft in the different neighborhoods of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
n_distinct(housingData$Boro)
library(dplyr)
n_distinct(housingData$Boro)
n_distinct(housingData$Neighborhood)
#Mean market value per sqft in the different districts of new york
top5Species <- housingData[rev(order(mean(housingData$Market.Value.per.SqFt)),"Neighborhood"][1:5]
#Mean market value per sqft in the different districts of new york
top5Species <- housingData[rev(order((housingData$Market.Value.per.SqFt)),"Neighborhood"][1:5]
#Mean market value per sqft in the different districts of new york
top5Species <- housingData[rev(order((housingData$Market.Value.per.SqFt),"Neighborhood"][1:5]
#Mean market value per sqft in the different districts of new york
top5Species <- housingData[rev(order(housingData$Market.Value.per.SqFt)),"Neighborhood"][1:5]
top5Species
#Mean market value per sqft in the different districts of new york
top5Species <- housingData[order(housingData$Market.Value.per.SqFt),"Neighborhood"][1:5]
top5Species
test<- mean(housingData['Market.Value.per.SqFt'])
test<- mean(housingData[housingData$Boro, 'Market.Value.per.SqFt'])
test
aggregate(housingData$Market.Value.per.SqFt, list(housingData$Boro), FUN=mean)
aggregate(housingData$Market.Value.per.SqFt, list(housingData$Boro), FUN=mean)[order(x),]
aggregate(housingData$Market.Value.per.SqFt, list(housingData$Boro), FUN=mean)[order(Market.Value.per.SqFt),]
aggregate(housingData$Market.Value.per.SqFt, list(housingData$Boro), FUN=mean)[1:2]
# Enter your code here!
#Mean market value per sqft in the different boroughs of new york
value_boroughs <- aggregate(housingData$Market.Value.per.SqFt, list(housingData$Boro), FUN=mean)
value_boroughs[order(value_boroughs$x),]
value_boroughs[order(value_boroughs$x, decreasing = TRUE),]
value_boroughs[order(value_boroughs$x, decreasing = TRUE),][1:2]
#Mean market value per sqft in the 5 most expensive neighborhoods of new york
value_neighborhood <- aggregate(housingData$Market.Value.per.SqFt, list(housingData$Neighborhood), FUN=mean)
value_neighborhood[order(value_neighborhood$x, decreasing = TRUE),]
value_neighborhood[order(value_neighborhood$x, decreasing = TRUE)[1:5],]
# Enter your code here!
#descriptive statistics
summary(housingData)
#information of the most expensive building
housingData[which.max(housingData$Market.Value.per.SqFt),]
value_neighborhood[order(value_neighborhood$x, decreasing = TRUE)[1:5],]
#information of the most cheapest building
housingData[which.min(housingData$Market.Value.per.SqFt),]
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages("arsenal")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("stats")
library(arsenal)
library(dplyr)
library(ggplot2)
library(stats)
# Enter your code here!
variables <- ncol(mtcars)
observations <- nrow(mtcars)
# Answer:
print(paste("There are total of", variables, "variables and", observations,"observations in this data set."))
#b. Print the summary statistics of the data set and report how many discrete and continuous variables are in the data set.
```{r}
# Enter your code here!
variables <- ncol(mtcars)
observations <- nrow(mtcars)
# Answer:
print(paste("There are total of", variables, "variables and", observations,"observations in this data set."))
#b. Print the summary statistics of the data set and report how many discrete and continuous variables are in the data set.
# Enter your code here!
summ <- summary(mtcars)
summ
# Answer:
print("There are 5 discrete variables and 6 continuous variables in this data set.")
# Enter your code here!
m <- round(mean(mtcars$mpg), digits=2)
v <- round(var(mtcars$mpg), digits=2)
s <- round(sd(mtcars$mpg), digits=2)
print(paste("The average of Mile Per Gallon from this data set is ", m , " with variance ", v , " and standard deviation", s , "."))
# Enter your code here!
tab1 <- aggregate(mtcars$mpg, list(cyl=mtcars$cyl), mean)
tab1
tab2 <- aggregate(mtcars$mpg, list(gear=mtcars$gear), sd)
tab2
# Enter your code here!
cross <- crosstable(mtcars, cols=c(cyl), by=c(gear), total = "row")
library(crosstable)
knitr::opts_chunk$set(echo = TRUE)
install.packages("arsenal")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("stats")
install.packages("crosstable")
library(arsenal)
library(dplyr)
library(ggplot2)
library(stats)
library(crosstable)
# Enter your code here!
cross <- crosstable(mtcars, cols=c(cyl), by=c(gear), total = "row")
cross
print("The most common car type in this data set is car with 8 cylinders and 3 gears. There are total of 12 cars belong to this specification in the data set.")
# Load the data set
data("PlantGrowth")
# Head of the data set
head(PlantGrowth)
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight),stat = "summary") +
geom_bar(stat="summary", fill="steelblue", fun="mean")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,6,1))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
mean(PlantGrowth[PlantGrowth$group == 'ctrl', 'weight'])
# Load the data set
data("PlantGrowth")
# Head of the data set
head(PlantGrowth)
# Enter your code here!
ggplot(PlantGrowth, aes(x=reorder(group,-weight), y=weight),stat = "summary") +
geom_bar(stat="summary", fill="steelblue", fun="mean")+
labs(y="mean weight", x="groups")+
ggtitle("Mean weight of the groups")+
scale_y_continuous(breaks = seq(0,6,1))+
theme(plot.title = element_text(hjust=0.5, face="bold"))
hist(mtcars$mpg,
col='steelblue',
main='Histogram of mpg',
xlab='mpg',
breaks=10,
ylab='Frequency')
print("Most of the cars in this data set are in the class of 15 miles per gallon.")
# Load the data set
data("USArrests")
# Head of the data set
head(USArrests)
# Enter your code here!
pairs(~ Murder + Assault, data = USArrests, main = "Correlation between Murder and Assault")
# Load and clean the housing data set
download.file(url='https://www.jaredlander.com/data/housing.csv',
destfile='housing.csv', mode='wb')
housingData <- read.csv('housing.csv')
housingData <- subset(housingData,
select = c("Neighborhood", "Market.Value.per.SqFt", "Boro", "Year.Built"))
housingData <- na.omit(housingData)
# Head of the cleaned data set
head(housingData)
# Enter your code here!
#descriptive statistics
summary(housingData)
#Mean market value per sqft in the different boroughs of new york
value_boroughs <- aggregate(housingData$Market.Value.per.SqFt, list(housingData$Boro), FUN=mean)
value_boroughs[order(value_boroughs$x, decreasing = TRUE),]
#Mean market value per sqft in the 5 most expensive neighborhoods of new york
value_neighborhood <- aggregate(housingData$Market.Value.per.SqFt, list(housingData$Neighborhood), FUN=mean)
value_neighborhood[order(value_neighborhood$x, decreasing = TRUE)[1:5],]
#information of the most expensive building
housingData[which.max(housingData$Market.Value.per.SqFt),]
#information of the most cheapest building
housingData[which.min(housingData$Market.Value.per.SqFt),]
#Mean market value per sqft in the 5 most expensive neighborhoods of new york
value_neighborhood <- aggregate(housingData$Market.Value.per.SqFt, list(housingData$Neighborhood), FUN=mean)
value_neighborhood[order(value_neighborhood$x, decreasing = TRUE)[1:5],]
test <- value_neighborhood[order(value_neighborhood$x, decreasing = TRUE)[1:5],]
test
#plot 1 - Mean market value per sqft in the different boroughs of new york
ggplot(housingData, aes(x=reorder(Boro,-x), y=x)) +
geom_bar(stat = "identity", fill="steelblue")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
colnames(top5_neighborhoods) <- c("Neighborhood","mean")
top5_neighborhoods <- value_neighborhood[order(value_neighborhood$x, decreasing = TRUE)[1:5],]
colnames(top5_neighborhoods) <- c("Neighborhood","mean")
top5_neighborhoods
#plot 1 - Mean market value per sqft in the different boroughs of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt)) +
geom_bar(stat = "identity", fill="steelblue")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 1 - Mean market value per sqft in the different boroughs of new york
ggplot(housingData, aes(x=reorder(Boro,-Market.Value.per.SqFt), y=Market.Value.per.SqFt)) +
geom_bar(stat = "summary", fill="steelblue")+
labs(y="mean market value per sqft", x="boroughs")+
ggtitle("Mean market value per sqft in the different boroughs of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 2 - Mean market value per sqft in the top 5 most expensive neighborhoods of new york
ggplot(top5_neighborhoods, aes(x=reorder(Neighborhood,-mean), y=mean)) +
geom_bar(stat = "summary", fill="steelblue")+
labs(y="mean market value per sqft", x="neighborhoods")+
ggtitle("Mean market value per sqft in the different neighborhoods of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 2 - Mean market value per sqft in the top 5 most expensive neighborhoods of new york
ggplot(top5_neighborhoods, aes(x=reorder(Neighborhood,-mean), y=mean)) +
geom_bar(stat = "identity", fill="steelblue")+
labs(y="mean market value per sqft", x="neighborhoods")+
ggtitle("Mean market value per sqft in the different neighborhoods of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 3 - histogram distribution of the market value per sqft
ggplot(data=housingData, aes(x=Market.Value.per.SqFt))+
geom_histogram(fill="steelblue")+
labs(y="Anzahl der Flüge", x="Distanz in Meilen")
#plot 3 - histogram distribution of the market value per sqft
ggplot(data=housingData, aes(x=Market.Value.per.SqFt))+
geom_histogram(fill="steelblue")+
labs(y="frequency", x="market value per sqft")+
ggtitle("Distribution of the market value per sqft in new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 3 - histogram distribution of the market value per sqft
ggplot(data=housingData, aes(x=Market.Value.per.SqFt))+
geom_histogram(fill="steelblue", bins=30)+
labs(y="frequency", x="market value per sqft")+
ggtitle("Distribution of the market value per sqft in new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 2 - Mean market value per sqft in the top 5 most expensive neighborhoods of new york
ggplot(top5_neighborhoods, aes(x=reorder(Neighborhood,-mean), y=mean)) +
geom_bar(stat = "identity", fill="steelblue")+
labs(y="mean market value per sqft", x="neighborhoods")+
ggtitle("Mean market value per sqft in the different neighborhoods of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 3 - histogram distribution of the market value per sqft
ggplot(data=housingData, aes(x=Market.Value.per.SqFt))+
geom_histogram(fill="steelblue", bins=30)+
labs(y="frequency", x="market value per sqft")+
ggtitle("Distribution of the market value per sqft in new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Head of the cleaned data set
head(housingData)
ggplot(data=housingData, aes(x=Year.Built))+
geom_histogram(fill="steelblue", bins=30)+
labs(y="frequency", x="year built")+
ggtitle("Distribution of the years the buildings were built in new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
#plot 4 - histogram distribution of the years the buildings were built
ggplot(data=housingData, aes(x=Year.Built))+
geom_histogram(fill="steelblue")+
labs(y="frequency", x="year built")+
ggtitle("Distribution of the years the buildings were built in new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
, bins=30
#plot 4 - histogram distribution of the years the buildings were built
ggplot(data=housingData, aes(x=Year.Built))+
geom_histogram(fill="steelblue", bins=30)+
labs(y="frequency", x="year built")+
ggtitle("Distribution of the years the buildings were built in new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
# Enter your code here!
mtcars%>%
group_by(gear)%>%
summarize(average=mean(mpg))
# Enter your code here!
tab1 <-mtcars%>%
group_by(cyl)%>%
summarize(average=mean(mpg))
tab1
tab2 <-mtcars%>%
group_by(gear)%>%
summarize(standardDeviation=sd(mpg))
tab2
install.packages("mars1")
library(mars1)
library(mars1)
install.packages("mars1")
library(knitr)
library(evaluate)
install.packages("r package", repos = "http://cran.us.r-project.org")
install.packages("knit")
install.packages('plyr', repos = "http://cran.us.r-project.org")
for(x in pkgs){
if(!is.element(x, installed.packages()[,1]))
{install.packages(x, repos="http://cran.fhcrc.org")
} else {print(paste(x, " library already installed"))}
}
knitr::opts_chunk$set(echo = TRUE)
detach("package:dplyr", unload = TRUE)
library(dplyr)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
detach("package:dplyr", unload = TRUE)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
install.packages("arsenal")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("stats")
install.packages("crosstable")
library(arsenal)
library(dplyr)
library(ggplot2)
library(stats)
library(crosstable)
install.packages("arsenal")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("stats")
install.packages("crosstable")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
library(arsenal)
library(dplyr)
library(ggplot2)
library(stats)
library(crosstable)
#Mean market value per sqft in the 5 most expensive neighborhoods of new york
value_neighborhood <- aggregate(housingData$Market.Value.per.SqFt, list(housingData$Neighborhood), FUN=mean)
top5_neighborhoods <- value_neighborhood[order(value_neighborhood$x, decreasing = TRUE)[1:5],]
colnames(top5_neighborhoods) <- c("Neighborhood","new_col2_name",new_col3_name)
colnames(top5_neighborhoods) <- c("Neighborhood","new_col2_name","new_col3_name")
colnames(top5_neighborhoods) <- c("Neighborhood","new_col2_name")
top5_neighborhoods
colnames(top5_neighborhoods) <- c("Neighborhood","mean")
top5_neighborhoods
#plot 2 - Mean market value per sqft in the top 5 most expensive neighborhoods of new york
ggplot(top5_neighborhoods, aes(x=reorder(Neighborhood,-mean), y=mean)) +
geom_bar(stat = "identity", fill="steelblue")+
labs(y="mean market value per sqft", x="neighborhoods")+
ggtitle("Mean market value per sqft in the different neighborhoods of new york")+
theme(plot.title = element_text(hjust=0.5, face="bold"))
